# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.

a = 1
b = 2
ans = 2

while b <= 4000000:
	a = a + b
	tmp = a
	a = b
	b = tmp
	if b % 2 == 0:
		ans += b

print (ans)

#
list1 = [1, 2]
temp = 3
while temp <= 4000000:
    list1.append(temp)
    temp = sum(list1[-2:])
print (sum(list1[1::3]))


#
list2 = [1, 2]
temp = 3
while temp <= 4000000:
    list2.append(temp)
    temp = sum(list2[-2:])

print (sum(x for x in list2 if x % 2 == 0))

# my solution
a = 1
b = 2
ans = 0
while a <= 4000000:
	a ,b = b, a + b
  #理解成赋值，a，b，被赋值了，就行，循环1次，赋值1次，
	if a % 2 == 0:
		ans += a

print (ans)
